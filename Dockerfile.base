# FROM ghcr.io/astral-sh/uv:bookworm-slim AS builder

# ENV UV_COMPILE_BYTECODE=1 \
#     UV_LINK_MODE=copy \
#     UV_PYTHON_INSTALL_DIR=/python \
#     UV_PYTHON_PREFERENCE=only-managed


# # Install build dependencies and clean up in the same layer
# RUN apt-get update -y && \
#     apt-get install -y clang git && \
#     rm -rf /var/lib/apt/lists/*


# # Install Python before the project for caching
# RUN uv python install 3.13

# WORKDIR /app
# RUN --mount=type=cache,target=/root/.cache/uv \
#     --mount=type=bind,source=uv.lock,target=uv.lock \
#     --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
#     uv sync --frozen --no-install-project --no-dev

# COPY . /app

# RUN --mount=type=cache,target=/root/.cache/uv \
#     uv sync --frozen --no-dev

# FROM debian:bookworm-slim AS runtime
FROM python:3.13-slim
# FROM ghcr.io/browserless/chromium

ARG NODE_MAJOR=20

# VNC password will be read from Docker secrets or fallback to default
# Create a fallback default password file
# RUN mkdir -p /run/secrets && \
#     echo "browser-use" > /run/secrets/vnc_password_default

# Install required packages including Chromium and clean up in the same layer
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    netcat-traditional \
    gnupg \
    unzip \
    fontconfig \
    libgconf-2-4 \
    libxss1 \
    libnss3 \
    libnspr4 \
    libasound2 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    # 可选, 默认使用 playwright 默认的浏览器
    chromium \
    # For Desktop Environment and VNC
    xfce4 \
    xfce4-terminal \
    dbus-x11 \
    dbus \
    xauth \
    supervisor \
    x11vnc \
    tigervnc-standalone-server \
    tigervnc-tools \
    procps \
    net-tools \
    xdg-utils \
    # For Browser and Playwright
    python3-numpy \
    # Fonts for better character rendering
    fonts-freefont-ttf \
    fonts-ipafont-gothic \
    fonts-wqy-zenhei \
    fonts-thai-tlwg \
    fonts-kacst \
    fonts-symbola \
    fonts-noto-color-emoji && \
    # 在清理 apt 缓存之前，重建字体缓存
    # fc-cache -fv && \
    rm -rf /var/lib/apt/lists/*

# 新增：修复 XFCE 默认面板配置冲突
# 从默认面板配置中移除掉旧的 notification-area 插件
RUN sed -i '/<value type="string" value="notification-area"\/>/d' /etc/xdg/xfce4/panel/default.xml

# 设置环境变量
ENV PATH="/root/.local/bin:$PATH"

# Copy only necessary files from builder
# COPY --from=builder /python /python
# COPY --from=builder /app /app
# Set proper permissions
# RUN chmod -R 755 /python /app

# Install Node.js using NodeSource PPA
RUN mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install nodejs -y \
    && rm -rf /var/lib/apt/lists/*

# Verify Node.js and npm installation (optional, but good for debugging)
RUN node -v && npm -v && npx -v

# Install noVNC
RUN git clone https://github.com/novnc/noVNC.git /opt/novnc \
    && git clone https://github.com/novnc/websockify /opt/novnc/utils/websockify \
    && ln -s /opt/novnc/vnc.html /opt/novnc/index.html

# Install WebUI(browser-use) 
RUN git clone --depth 1 -b v2.0.0 https://github.com/browser-use/web-ui.git /opt/web-ui && cd /opt/web-ui && \
    cp .env.example .env &&  uv venv -p 3.13 && uv pip install -r requirements.txt

CMD ["/bin/bash"]
